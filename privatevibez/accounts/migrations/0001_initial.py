# Generated by Django 4.2.5 on 2023-09-25 12:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Is_Accepted_Invite', models.BooleanField(blank=True, default=False)),
                ('Is_Sent_Invite', models.BooleanField(blank=True, default=False)),
                ('Status', models.CharField(blank=True, default='User', max_length=20, null=True)),
                ('Decline_Message', models.CharField(blank=True, max_length=250, null=True)),
                ('Ip_Address', models.CharField(blank=True, max_length=250, null=True)),
                ('Ip_Address_Expires', models.DateTimeField(blank=True, null=True)),
                ('Country', models.CharField(blank=True, max_length=250, null=True)),
                ('Region', models.CharField(blank=True, max_length=250, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item_Availed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item', models.CharField(blank=True, max_length=200, null=True)),
                ('Cost', models.CharField(blank=True, max_length=200, null=True)),
                ('Note', models.TextField(blank=True, null=True)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Cost', models.CharField(blank=True, max_length=200, null=True)),
                ('Vibez', models.IntegerField(blank=True, default=0, null=True)),
                ('Slots', models.IntegerField(blank=True, default=0, null=True)),
                ('Badge', models.ImageField(blank=True, null=True, upload_to='subscription_badge')),
                ('Timestamp', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(max_length=20)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Birth_Date', models.CharField(blank=True, max_length=500, null=True)),
                ('Real_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Age', models.IntegerField(blank=True, null=True)),
                ('I_Am', models.CharField(blank=True, max_length=200, null=True)),
                ('Interested_In', models.CharField(blank=True, max_length=200, null=True)),
                ('Location', models.CharField(blank=True, max_length=200, null=True)),
                ('Language', models.CharField(blank=True, max_length=200, null=True)),
                ('Body_Type', models.CharField(blank=True, max_length=200, null=True)),
                ('Vibez', models.IntegerField(blank=True, default=0, null=True)),
                ('U_token', models.CharField(blank=True, max_length=200, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('Id_File', models.ImageField(blank=True, null=True, upload_to='ID')),
                ('Second_Id_File', models.ImageField(blank=True, null=True, upload_to='2nd_ID')),
                ('Free_spins', models.IntegerField(blank=True, default=0, null=True)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Availed', models.ManyToManyField(blank=True, related_name='Item_Avail', to='accounts.item_availed')),
                ('Subscription_Type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.subscription')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Memos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.CharField(blank=True, max_length=500, null=True)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('From', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Memos_from', to=settings.AUTH_USER_MODEL)),
                ('To', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Memos_To', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bad_Acters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.CharField(blank=True, max_length=500, null=True)),
                ('Staff', models.CharField(blank=True, max_length=500, null=True)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Reported', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported', to=settings.AUTH_USER_MODEL)),
                ('Reporty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
