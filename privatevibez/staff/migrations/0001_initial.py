# Generated by Django 4.2.5 on 2023-10-04 01:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivatevibezRevenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Slot_Machine_Revenue', models.IntegerField(blank=True, default=0, null=True)),
                ('Lottery_Revenue', models.IntegerField(blank=True, default=0, null=True)),
                ('Dice_Revenue', models.IntegerField(blank=True, default=0, null=True)),
                ('Total_Vibez', models.IntegerField(blank=True, default=0, null=True)),
                ('Total_Cash', models.FloatField(blank=True, default=0, null=True)),
                ('Chargeback', models.IntegerField(blank=True, default=0, null=True)),
                ('Vibe_Cost', models.FloatField(blank=True, default=0, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Promotion_Code', models.CharField(blank=True, max_length=100, null=True)),
                ('Promotion_Earning', models.FloatField(blank=True, null=True)),
                ('Promotion_Registration_Limit', models.IntegerField(blank=True, null=True)),
                ('Duration', models.DateTimeField(blank=True, null=True)),
                ('Total_Viewers', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToDoProject_Dev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Coder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ToDoProject_Dev_Staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToDolist_Dev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=100, null=True)),
                ('Message', models.CharField(blank=True, max_length=200, null=True)),
                ('Done', models.BooleanField(default=False)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Coder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ToDolist_Dev_Coder', to=settings.AUTH_USER_MODEL)),
                ('Staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ToDolist_Dev_Staff', to=settings.AUTH_USER_MODEL)),
                ('ToDoProject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.todoproject_dev')),
            ],
        ),
        migrations.CreateModel(
            name='StaffRoomManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Staff_Name', to=settings.AUTH_USER_MODEL)),
                ('staff_list', models.ManyToManyField(blank=True, null=True, related_name='staff_list', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('fname', models.CharField(blank=True, max_length=100, null=True)),
                ('lname', models.CharField(blank=True, max_length=100, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('id_photo', models.ImageField(blank=True, null=True, upload_to='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('staff_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
            options={
                'permissions': [('can_add_staff', 'Can add staff'), ('can_edit_staff', 'Can edit a staff'), ('can_delete_staff', 'Can delete a staff'), ('can_view_staff', 'Can view a staff'), ('can_view_dashboard', 'Can view a dashboard'), ('can_view_id_check', 'Can view a ID Check'), ('can_view_bad_acters', 'Can view a bad acters'), ('can_view_todo_list', 'Can view a todo list'), ('can_view_inbox', 'Can view a inbox'), ('can_view_promotions', 'Can view promotions'), ('can_view_interactives', 'Can view interactives'), ('can_view_subscriptions', 'Can view subscriptions')],
            },
        ),
        migrations.CreateModel(
            name='Memos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('Subject', models.CharField(blank=True, max_length=200, null=True)),
                ('Message', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('From', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Memos_From', to=settings.AUTH_USER_MODEL)),
                ('To', models.ManyToManyField(blank=True, null=True, related_name='To_whom', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Decline_Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.CharField(blank=True, max_length=250, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('Writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Decline_Message_Owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
